plugins {
    id 'java'
    id 'idea'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

group 'fybug.nulll'
version = '0.0.2'
sourceCompatibility = '14'
targetCompatibility = '14'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/google" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    maven { url "https://maven.aliyun.com/repository/grails-core" }
    maven { url "https://maven.aliyun.com/repository/apache-snapshots" }
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    implementation fileTree(dir: 'lib', includes: ['*.jar'])
    compileClasspath "org.jetbrains:annotations:17.0.0"
    compileClasspath "org.projectlombok:lombok:1.18.10"
    annotationProcessor "org.projectlombok:lombok:1.18.10"

    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains:annotations:17.0.0"
    testCompile "org.projectlombok:lombok:1.18.10"
}

task PDConcurrent(type: Jar) {
    destinationDirectory = file('jar')
    manifest {
        attributes(
                'Manifest-Version': '1.0',
                'Built-By': 'fybug/风雨bu改',
                'Created-By': 'IntelliJ IDEA'
        )
    }
    archiveFileName = 'PDConcurrent.jar'
    // 打包编译输出
    from sourceSets.main.output
}

task PDConcurrent_all(type: Jar) {
    destinationDirectory = file('jar')
    manifest {
        attributes(
                'Manifest-Version': '1.0',
                'Built-By': 'fybug/风雨bu改',
                'Created-By': 'IntelliJ IDEA'
        )
    }
    archiveFileName = 'PDConcurrent_all.jar'
    // 打包编译输出
    from sourceSets.main.output
    // 打包源码
    from sourceSets.main.allSource
    from {
        // implementation 相关的引入解压并打包入新的jar中
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task PDConcurrent_sources(type: Jar) {
    destinationDirectory = file('jar')
    manifest {
        attributes(
                'Manifest-Version': '1.0',
                'Built-By': 'fybug/风雨bu改',
                'Created-By': 'IntelliJ IDEA'
        )
    }
    archiveFileName = 'PDConcurrent_sources.jar'
    // 打包源码
    from sourceSets.main.allSource
}

task release {
    dependsOn clean
    dependsOn PDConcurrent_all
    dependsOn PDConcurrent
    dependsOn PDConcurrent_sources
}
